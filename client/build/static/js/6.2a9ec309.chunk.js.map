{"version":3,"sources":["MUI/CssComponents.tsx","hooks/message.hook.ts","graphql/mutations/login.ts","graphql/mutations/registration.ts","Pages/Registration.tsx"],"names":["CssTextField","withStyles","root","color","fontWeight","fontSize","height","borderRadius","borderColor","TextField","SearchTextField","boxShadow","theme","width","padding","display","switchBase","transform","opacity","backgroundColor","thumb","track","border","checked","Switch","settings","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","useMessage","useCallback","text","type","toast","LOGIN_MUTATION","gql","REG_MUTATION","Registration","history","useHistory","message","useState","name","email","password","password_repeat","form","setForm","useMutation","variables","registrate","data","error","loading","update","cache","login","token","user","localStorage","setItem","writeQuery","query","ME_QUERY","me","result","useEffect","registration","handleChange","e","target","value","style","marginLeft","marginTop","onClick","goBack","className","src","Logo","alt","onSubmit","preventDefault","onChange","size","label","variant","fullWidth","disabled","to"],"mappings":"kGAAA,kGAEaA,EAAeC,YAAW,CACrCC,KAAM,CACJ,UAAW,CACTC,MAAO,WAET,sBAAuB,CACrBA,MAAO,UACPC,WAAY,KAEd,oBAAqB,CACnBD,MAAO,WAET,2BAA4B,CAC1B,UAAW,CACTA,MAAO,UACPC,WAAY,IACZC,SAAU,GACVC,OAAQ,IAEV,gBAAiB,CACfH,MAAO,UACPC,WAAY,IACZC,SAAU,IAEZ,oBAAqB,CACnBF,MAAO,WAET,aAAc,CACZI,aAAc,EACdC,YAAa,WAEf,mBAAoB,CAClBA,YAAa,WAEf,yBAA0B,CACxBA,YAAa,WAEf,uBAAwB,CACtBA,YAAa,cAtCOP,CA0CzBQ,KAEUC,EAAkBT,YAAW,CACxCC,KAAM,CACJ,2BAA4B,CAC1B,UAAW,CACTE,WAAY,KAEd,aAAc,CACZD,MAAO,UACPC,WAAY,IACZG,aAAc,EACdC,YAAa,cACbG,UAAW,oCAEb,yBAA0B,CACxBH,YAAa,kBAdUP,CAkB5BQ,KAEsBR,aAAW,SAACW,GAAD,MAAY,CAC9CV,KAAM,CACJW,MAAO,GACPP,OAAQ,GACRQ,QAAS,EACTC,QAAS,QAEXC,WAAY,CACVF,QAAS,EACTX,MAAO,UACP,YAAa,CACXc,UAAW,mBACXd,MAAO,UACP,aAAc,CACZe,QAAS,EACTC,gBAAiB,UACjBX,YAAa,aAInBY,MAAO,CACLP,MAAO,GACPP,OAAQ,GACRK,UAAW,QAEbU,MAAO,CACLC,OAAQ,EACRf,aAAc,GACdY,gBAAiB,WAEnBI,QAAS,MA9BctB,CA+BrBuB,M,iCCjGJ,qDAQMC,EAAyB,CAC7BC,SAAU,gBACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,GAGCC,EAAa,kBACxBC,uBAAY,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OAA8BC,IAAMD,GAAMD,EAAMX,KAAW,M,uDCjBnEc,EAA+BC,cAAH,mKAYnBD,O,sICNAE,EANoBD,cAAH,0G,iCCmJjBE,UAhIgB,WAC7B,IAAMC,EAAUC,cACVC,EAAUX,cAFmB,EAIXY,mBAAgB,CACtCC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,gBAAiB,KARgB,mBAI5BC,EAJ4B,KAItBC,EAJsB,OAWYC,sBAAYZ,EAAc,CACvEa,UAAW,CACTH,KAAM,CAAEJ,KAAMI,EAAKJ,KAAMC,MAAOG,EAAKH,MAAOC,SAAUE,EAAKF,aAb5B,mBAW5BM,EAX4B,YAWdC,EAXc,EAWdA,KAAMC,EAXQ,EAWRA,MAAOC,EAXC,EAWDA,QAXC,EAiBXL,sBAAYd,IAAgB,CAClDe,UAAW,CAAEH,KAAM,CAAEH,MAAOG,EAAKH,MAAOC,SAAUE,EAAKF,WACvDU,OAAQ,SAACC,EAAD,GAAsB,IAAD,IAAXJ,KACaK,OAAS,GAA9BC,EADmB,EACnBA,MAAOC,EADY,EACZA,KACfC,aAAaC,QAAQ,QAASH,GAC9BF,EAAMM,WAAW,CACfC,MAAOC,IACPZ,KAAM,CAAEa,GAAIN,QAxBiB,mBAiB5BF,EAjB4B,KAiBrBS,EAjBqB,KA6BnCC,qBAAU,WACJf,GAAQA,EAAKgB,eACf3B,EAAQ,CAAET,KAAMoB,EAAKgB,aAAcnC,KAAM,YACzCwB,OAED,CAACL,EAAMX,EAASgB,IAEnBU,qBAAU,WACJd,GAAOZ,EAAQ,CAAET,KAAMqB,EAAMZ,QAASR,KAAM,UAC5CiC,EAAOb,OAAOZ,EAAQ,CAAET,KAAMkC,EAAOb,MAAMZ,QAASR,KAAM,YAC7D,CAACoB,EAAOa,EAAOb,MAAOZ,IAEzB,IAAM4B,EAAe,SAACC,GAAD,OACnBtB,EAAQ,2BAAKD,GAAN,kBAAauB,EAAEC,OAAO5B,KAAO2B,EAAEC,OAAOC,UAS/C,OACE,qCACE,qBACEC,MAAO,CAAEC,WAAY,GAAIC,UAAW,IACpCC,QAAS,kBAAMrC,EAAQsC,UAFzB,SAIE,cAAC,IAAD,MAEF,qBAAKC,UAAU,iBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKC,IAAKC,IAAMC,IAAI,OAAOxE,MAAO,MAClC,mBAAGqE,UAAU,WAAb,gFACA,uBAAMI,SAnBO,SAACZ,GAEpB,GADAA,EAAEa,iBACEpC,EAAKF,WAAaE,EAAKD,gBACzB,OAAOL,EAAQ,CAAET,KAAM,4GAAwBC,KAAM,UACvDkB,KAeM,UACE,cAAC,IAAD,CACEiC,SAAUf,EACVG,MAAOzB,EAAKJ,KACZA,KAAK,OACL0C,KAAK,QACLC,MAAM,8CACNC,QAAQ,WACRC,WAAS,IAEX,cAAC,IAAD,CACEJ,SAAUf,EACVG,MAAOzB,EAAKH,MACZD,KAAK,QACL0C,KAAK,QACLC,MAAM,+CACNC,QAAQ,WACRC,WAAS,EACTf,MAAO,CAAEE,UAAW,MAEtB,cAAC,IAAD,CACES,SAAUf,EACVG,MAAOzB,EAAKF,SACZF,KAAK,WACL0C,KAAK,QACLC,MAAM,uCACNC,QAAQ,WACRtD,KAAK,WACLuD,WAAS,EACTf,MAAO,CAAEE,UAAW,MAEtB,cAAC,IAAD,CACES,SAAUf,EACVG,MAAOzB,EAAKD,gBACZH,KAAK,kBACL0C,KAAK,QACLC,MAAM,6EACNC,QAAQ,WACRtD,KAAK,WACLuD,WAAS,EACTf,MAAO,CAAEE,UAAW,MAGtB,wBACEc,SAAUnC,GAAWY,EAAOZ,QAC5BrB,KAAK,SACL6C,UAAU,iBACVL,MAAO,CAAEE,UAAW,IAJtB,6HAUF,oBAAGG,UAAU,cAAb,8jBAE6C,IAC3C,cAAC,IAAD,CAASY,GAAG,UAAZ,kLAA8D,IAHhE","file":"static/js/6.2a9ec309.chunk.js","sourcesContent":["import { TextField, withStyles, Switch } from \"@material-ui/core\";\r\n\r\nexport const CssTextField = withStyles({\r\n  root: {\r\n    \"& label\": {\r\n      color: \"#C0C0C0\",\r\n    },\r\n    \"& label.Mui-focused\": {\r\n      color: \"#5B5B5B\",\r\n      fontWeight: 500,\r\n    },\r\n    \"& label.Mui-error\": {\r\n      color: \"#F44336\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& input\": {\r\n        color: \"#C0C0C0\",\r\n        fontWeight: 500,\r\n        fontSize: 12,\r\n        height: 19,\r\n      },\r\n      \"& input:focus\": {\r\n        color: \"#000000\",\r\n        fontWeight: 500,\r\n        fontSize: 12,\r\n      },\r\n      \"&.Mui-error input\": {\r\n        color: \"#F44336\",\r\n      },\r\n      \"& fieldset\": {\r\n        borderRadius: 5,\r\n        borderColor: \"#D4D4D4\",\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#5B5B5B\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#5B5B5B\",\r\n      },\r\n      \"&.Mui-error fieldset\": {\r\n        borderColor: \"#F44336\",\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nexport const SearchTextField = withStyles({\r\n  root: {\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& input\": {\r\n        fontWeight: 400,\r\n      },\r\n      \"& fieldset\": {\r\n        color: \"#000000\",\r\n        fontWeight: 400,\r\n        borderRadius: 7,\r\n        borderColor: \"transparent\",\r\n        boxShadow: \"0px 4px 15px rgba(0, 0, 0, 0.12)\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"transparent\",\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nexport const CssSwitch = withStyles((theme) => ({\r\n  root: {\r\n    width: 60,\r\n    height: 33,\r\n    padding: 2,\r\n    display: \"flex\",\r\n  },\r\n  switchBase: {\r\n    padding: 5,\r\n    color: \"#FFFFFF\",\r\n    \"&$checked\": {\r\n      transform: \"translateX(28px)\",\r\n      color: \"#215BA5\",\r\n      \"& + $track\": {\r\n        opacity: 1,\r\n        backgroundColor: \"#F1F2F6\",\r\n        borderColor: \"#F1F2F6\",\r\n      },\r\n    },\r\n  },\r\n  thumb: {\r\n    width: 23,\r\n    height: 23,\r\n    boxShadow: \"none\",\r\n  },\r\n  track: {\r\n    border: 0,\r\n    borderRadius: 16,\r\n    backgroundColor: \"#F1F2F6\",\r\n  },\r\n  checked: {},\r\n}))(Switch);\r\n","import { useCallback } from \"react\";\r\nimport { toast, ToastOptions } from \"react-toastify\";\r\n\r\ntype TMessage = {\r\n  text: string;\r\n  type: \"success\" | \"error\";\r\n};\r\n\r\nconst settings: ToastOptions = {\r\n  position: \"bottom-center\",\r\n  autoClose: 5000,\r\n  hideProgressBar: true,\r\n  closeOnClick: true,\r\n  pauseOnHover: true,\r\n  draggable: true,\r\n  progress: undefined,\r\n};\r\n\r\nexport const useMessage = () =>\r\n  useCallback(({ text, type }: TMessage) => toast[type](text, settings), []);\r\n","import { DocumentNode, gql } from \"@apollo/client\";\r\n\r\nconst LOGIN_MUTATION: DocumentNode = gql`\r\n  mutation login($form: IUser!) {\r\n    login(form: $form) {\r\n      token\r\n      user {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default LOGIN_MUTATION;\r\n","import { DocumentNode, gql } from \"@apollo/client\";\r\n\r\nconst REG_MUTATION: DocumentNode = gql`\r\n  mutation registration($form: IUser!) {\r\n    registration(form: $form)\r\n  }\r\n`;\r\n\r\nexport default REG_MUTATION;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Back } from \"../Icons\";\r\nimport Logo from \"../assets/logo.svg\";\r\nimport { CssTextField } from \"../MUI/CssComponents\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport REG_MUTATION from \"../graphql/mutations/registration\";\r\nimport LOGIN_MUTATION from \"../graphql/mutations/login\";\r\nimport ME_QUERY from \"../graphql/queries/me\";\r\n\r\nimport { useMessage } from \"../hooks/message.hook\";\r\n\r\ntype TForm = {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n  password_repeat: string;\r\n};\r\n\r\nconst Registration: React.FC = () => {\r\n  const history = useHistory();\r\n  const message = useMessage();\r\n\r\n  const [form, setForm] = useState<TForm>({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password_repeat: \"\",\r\n  });\r\n\r\n  const [registrate, { data, error, loading }] = useMutation(REG_MUTATION, {\r\n    variables: {\r\n      form: { name: form.name, email: form.email, password: form.password },\r\n    },\r\n  });\r\n\r\n  const [login, result] = useMutation(LOGIN_MUTATION, {\r\n    variables: { form: { email: form.email, password: form.password } },\r\n    update: (cache, { data }) => {\r\n      const { token, user } = data.login || {};\r\n      localStorage.setItem(\"token\", token);\r\n      cache.writeQuery({\r\n        query: ME_QUERY,\r\n        data: { me: user },\r\n      });\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data && data.registration) {\r\n      message({ text: data.registration, type: \"success\" });\r\n      login();\r\n    }\r\n  }, [data, message, login]);\r\n\r\n  useEffect(() => {\r\n    if (error) message({ text: error.message, type: \"error\" });\r\n    if (result.error) message({ text: result.error.message, type: \"error\" });\r\n  }, [error, result.error, message]);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = (e: React.SyntheticEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (form.password !== form.password_repeat)\r\n      return message({ text: \"Пароли не совпадают!\", type: \"error\" });\r\n    registrate();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{ marginLeft: 20, marginTop: 20 }}\r\n        onClick={() => history.goBack()}\r\n      >\r\n        <Back />\r\n      </div>\r\n      <div className=\"center-wrapper\">\r\n        <div className=\"wrap\">\r\n          <img src={Logo} alt=\"logo\" width={200} />\r\n          <p className=\"subtitle\">Регистрация</p>\r\n          <form onSubmit={handleSubmit}>\r\n            <CssTextField\r\n              onChange={handleChange}\r\n              value={form.name}\r\n              name=\"name\"\r\n              size=\"small\"\r\n              label=\"Ваше имя\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            />\r\n            <CssTextField\r\n              onChange={handleChange}\r\n              value={form.email}\r\n              name=\"email\"\r\n              size=\"small\"\r\n              label=\"Эл. почта\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              style={{ marginTop: 11 }}\r\n            />\r\n            <CssTextField\r\n              onChange={handleChange}\r\n              value={form.password}\r\n              name=\"password\"\r\n              size=\"small\"\r\n              label=\"Пароль\"\r\n              variant=\"outlined\"\r\n              type=\"password\"\r\n              fullWidth\r\n              style={{ marginTop: 11 }}\r\n            />\r\n            <CssTextField\r\n              onChange={handleChange}\r\n              value={form.password_repeat}\r\n              name=\"password_repeat\"\r\n              size=\"small\"\r\n              label=\"Пароль ещё раз\"\r\n              variant=\"outlined\"\r\n              type=\"password\"\r\n              fullWidth\r\n              style={{ marginTop: 11 }}\r\n            />\r\n\r\n            <button\r\n              disabled={loading || result.loading}\r\n              type=\"submit\"\r\n              className=\"btn btn-shadow\"\r\n              style={{ marginTop: 15 }}\r\n            >\r\n              Зарегистрироваться\r\n            </button>\r\n          </form>\r\n\r\n          <p className=\"bottom-link\">\r\n            Нажимая кнопку “Зарегистрироваться” я даю согласие на обработку\r\n            персональных данных, а так же соглашаюсь с{\" \"}\r\n            <NavLink to=\"/policy\"> политикой конфиденциальности</NavLink>{\" \"}\r\n            приложения DISCARDS\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n"],"sourceRoot":""}